<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  
    <section name="MsfConfig"
      type="Microsoft.SolverFoundation.Services.MsfConfigSection, Microsoft.Solver.Foundation, Version=3.0.2.10889, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
      allowLocation="true"
      allowDefinition="Everywhere"
      allowExeDefinition="MachineToApplication"
      restartOnExternalChanges="true"
      requirePermission="true" />
  
  </configSections>
  
  <MsfConfig>
    <MsfPluginSolvers>
      <MsfPluginSolver name="LpSolveLP"
        capability="LP"
        assembly="LpSolvePlugIn.dll"
        solverclass="SolverFoundation.Plugin.LpSolve.LpSolveSolver"
        directiveclass="SolverFoundation.Plugin.LpSolve.LpSolveDirective"
        parameterclass="SolverFoundation.Plugin.LpSolve.LpSolveParams" />
      <MsfPluginSolver name="LpSolveMIP"
        capability="MILP"
        assembly="LpSolvePlugIn.dll"
        solverclass="SolverFoundation.Plugin.LpSolve.LpSolveSolver"
        directiveclass="SolverFoundation.Plugin.LpSolve.LpSolveDirective"
        parameterclass="SolverFoundation.Plugin.LpSolve.LpSolveParams" />
    </MsfPluginSolvers>
  </MsfConfig>
  
  <appSettings>
    <!--<add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />-->
    <add key="cacheTimeout" value="15" />
    <add key="ClientSettingsProvider.ServiceUri" value="" />
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5" />
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
      </providers>
    </roleManager>
  </system.web>
  <connectionStrings>
    <!-- SQL Server -->
    <add name="lostNFoundDb" providerName="System.Data.SqlClient" connectionString="Data Source=SIMON-PC\SQLEXPRESS;Initial Catalog=lostNfound;User ID=sa;Password=stdg21;" />
    <add name="lostNFoundDb2" providerName="System.Data.SqlClient" connectionString="Data Source=SIMON-PC\SQLEXPRESS;Initial Catalog=LostNFoundServer.ManufacturingContext;User ID=sa;Password=stdg21;" />
  </connectionStrings>
  <system.serviceModel>
    <behaviors>
      <serviceBehaviors>
        <behavior name="NewBehavior">
          <!--For SSL-->
          <!--<serviceMetadata httpGetEnabled="false" httpsGetEnabled="true"/>-->
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="false" />
          <serviceDebug includeExceptionDetailInFaults="true" />
          <!--<serviceCredentials>
           <userNameAuthentication userNamePasswordValidationMode="Custom" customUserNamePasswordValidatorType="UserLoginService.MyValidator, UserLoginService" />
          </serviceCredentials>-->
        </behavior>
      </serviceBehaviors>
      <endpointBehaviors>
        <behavior name="restBehave">
          <webHttp />
          <CorsSupport />
          <!--<MyInspector/>-->
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <extensions>
      <behaviorExtensions>
        <add name="CorsSupport" type="LostNFoundServer.CorsSupportBehaviorElement, LostNFoundServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
      </behaviorExtensions>
    </extensions>
    <!--<extensions>
      <behaviorExtensions>
        <add name="MyInspector" type="LostNFoundServer.EnableCorsEndpointBehavior, LostNFoundServer"/>
      </behaviorExtensions>
    </extensions>-->
    <bindings>
      <webHttpBinding>
        <binding name="Binding" maxReceivedMessageSize="10485760">
          <security mode="None">
            <transport clientCredentialType="None">
            </transport>
          </security>
          <!--For SSL-->
          <!--<security mode="Transport">
            <transport clientCredentialType="None" ></transport>
          </security>-->
        </binding>
      </webHttpBinding>
    </bindings>
    <services>
      <service behaviorConfiguration="NewBehavior" name="LostNFoundServer.BusinessHeapMap">
        <endpoint binding="webHttpBinding" bindingConfiguration="Binding" behaviorConfiguration="restBehave" contract="LostNFoundServer.IBusinessHeapMap" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:3600/BusinessHeapMap" />
          </baseAddresses>
        </host>
      </service>
      <service behaviorConfiguration="NewBehavior" name="LostNFoundServer.SalesPerformance">
        <endpoint binding="webHttpBinding" bindingConfiguration="Binding" behaviorConfiguration="restBehave" contract="LostNFoundServer.ISalesPerformance" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:3600/SalesPerformance" />
          </baseAddresses>
        </host>
      </service>
      <service behaviorConfiguration="NewBehavior" name="LostNFoundServer.ProductCRUD">
        <endpoint binding="webHttpBinding" bindingConfiguration="Binding" behaviorConfiguration="restBehave" contract="LostNFoundServer.IProductCRUD" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:3600/Product" />
          </baseAddresses>
        </host>
      </service>
      <service behaviorConfiguration="NewBehavior" name="LostNFoundServer.UserAdmin">
        <endpoint binding="webHttpBinding" bindingConfiguration="Binding" behaviorConfiguration="restBehave" contract="LostNFoundServer.IUserAdmin" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:3600/lostNfoundUser" />
          </baseAddresses>
        </host>
      </service>
      <service behaviorConfiguration="NewBehavior" name="LostNFoundServer.AdvancedPlanning">
        <endpoint binding="webHttpBinding" bindingConfiguration="Binding" behaviorConfiguration="restBehave" contract="LostNFoundServer.IAdvancedPlanning" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:3600/AdvancedPlanning" />
          </baseAddresses>
        </host>
      </service>
    </services>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
  <system.webServer>
    <!--<modules runAllManagedModulesForAllRequests="true"/>-->
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
    <directoryBrowse enabled="true" />
  </system.webServer>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="Data Source=SIMON-PC\SQLEXPRESS;Initial Catalog=LostNFoundServer.ManufacturingContext;User ID=sa;Password=stdg21;" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
</configuration>